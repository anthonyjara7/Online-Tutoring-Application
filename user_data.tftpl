Content-Type: multipart/mixed; boundary="//"
MIME-Version: 1.0

--//
Content-Type: text/x-shellscript-per-once; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="launch.txt"

#!/bin/bash
# Installing dependencies
yum update -y
yum install docker git libicu jq -y

systemctl enable docker --now  # Starts docker daemon now and on startup
chmod 700 /var/run/docker.sock

# Need to manually install docker compose v2
DOCKER_CONFIG=$${DOCKER_CONFIG:-/usr/local/lib/docker}
mkdir -p $DOCKER_CONFIG/cli-plugins
curl -SL https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose

# Get action runner data
mkdir actions-runner && cd actions-runner
curl -o actions-runner-linux-x64-2.311.0.tar.gz -L https://github.com/actions/runner/releases/download/v2.311.0/actions-runner-linux-x64-2.311.0.tar.gz
tar xzf ./actions-runner-linux-x64-2.311.0.tar.gz

# Initializing variables
GITHUB_TOKEN=${github_token}
OWNER=${github_owner}
REPO=${github_repo}

# Getting self-hosted runner registration token
RESPONSE=$(curl -L \
  -X POST \
  -H "Accept: application/vnd.github+json" \
  -H "Authorization: Bearer $GITHUB_TOKEN" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  https://api.github.com/repos/$OWNER/$REPO/actions/runners/registration-token)

# Extracting token from JSON response
TOKEN=$(jq -r '.token' <<< $RESPONSE)
unset RESPONSE

# Authenticate to GitHub
export RUNNER_ALLOW_RUNASROOT="1"
./config.sh --unattended --url https://github.com/$OWNER/$REPO --token $TOKEN

# Get latest version of repository
git clone https://github.com/anthonyjara7/Online-Tutoring-Application.git

--//
Content-Type: text/x-shellscript-per-boot; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="userdata.txt"

#!/bin/bash
cd /actions-runner/Online-Tutoring-Application

# If repo updated, get latest from main
git pull origin main

# Create envrionment variable file
IP_ADDRESS=$(curl ifconfig.me)
cat <<EOT > app.env
DB_HOST=${db_host}
DB_NAME=${db_name}
DB_USER=${db_user}
DB_PASS=${db_pass}
DB_PORT=${db_port}
MFA_EMAIL=${mfa_email}
MFA_PASSWORD=${mfa_pass}
BACKEND_BASE_URL=$IP_ADDRESS
EOT

# Start application
docker compose --env-file app.env up --build -d

# Remove app.env
rm app.env

# Start self-hosted runner
cd ..
export RUNNER_ALLOW_RUNASROOT="1"
./run.sh

--//--
